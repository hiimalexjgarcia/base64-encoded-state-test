html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

/**
 * Visually hide an element, but leave it available for screen readers
 * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
 * @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
 .screen-reader {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

/**
 * Extends the .screen-reader class to allow the element to be focusable when navigated to via the keyboard
 * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
 * @link https://www.drupal.org/node/897638
 */
.screen-reader-focusable:active,
.screen-reader-focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    white-space: normal;
    width: auto;
}

.d-block {
    display: block;
}
.w-100 {
    width: 100%;
}
.mb-3 {
    margin-bottom: 1em;
}
.d-flex {
    display: flex;
}
.d-flex .align-items-start {
    align-items: flex-start;
}

/**
 * Mobile styles
 */
input[type="search"] {
    margin-left: auto;
}

input[type="search"]::placeholder {
    text-align: right;
    margin-right: -1em
}

.note {
    display: flex;
    align-items: flex-start;
}

.note details {
    margin-left: 4px;
}

.note details summary > * {
    display: inline;
}

.no-inputsearchevent input#notesInputSearch {
    display: none;
}
